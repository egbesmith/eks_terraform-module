# PROVIDER BLOCK
Terraform relies on plugins called provider to interract with different cloud providers. 
Here are some other examples of providers: 
                      aws- amazon 
                      azurerm - for Azure 
                      google - for Google Cloud Platform kubernetes - 
                      for Kubernetes openstack - 
                      for OpenStack vsphere -
                      for VMware vSphere There are many other providers available, and new ones are being added all the time.

#   Ways of configuring providers
A. In a Root module This is the most common way to configure providers. The provider configuration block is placed in the root module of the Terraform configuration. This makes the provider configuration available to all the resources in the configuration.

                  provider "aws" {
                    region = "us-east-1"
                  }
                  
                  resource "aws_instance" "example" {
                    ami = "ami-0123456789abcdef0"
                    instance_type = "t2.micro"
                  }
B. In a child module
You can also configure providers in a child module. This is useful if you want to reuse the same provider configuration in multiple resources.

                  module "aws_vpc" {
                    source = "./aws_vpc"
                    providers = {
                      aws = aws.us-west-2
                    }
                  }
                  
                  resource "aws_instance" "example" {
                    ami = "ami-0123456789abcdef0"
                    instance_type = "t2.micro"
                    depends_on = [module.aws_vpc]
                  }
C. In the required_providers block
You can also configure providers in the required_providers block. This is useful if you want to make sure that a specific provider version is used.

                  terraform {
                    required_providers {
                      aws = {
                        source = "hashicorp/aws"
                        version = "~> 3.79"
                      }
                    }
                  }
                  
                  resource "aws_instance" "example" {
                    ami = "ami-0123456789abcdef0"
                    instance_type = "t2.micro"
                  }
The best way to configure providers depends on your specific needs. If you are only using a single provider, 
then configuring it in the root module is the simplest option. If you are using multiple providers, 
or if you want to reuse the same provider configuration in multiple resources, 
then configuring it in a child module is a good option. And if you want to make sure that a specific provider version is used, 
then configuring it in the required_providers block is the best option. 4. In the required terraform_provider block
